basePath: /api/v1
definitions:
  schema.AuthOutput:
    properties:
      jwt:
        type: string
    type: object
  schema.MessageOutput:
    properties:
      message:
        type: boolean
    type: object
  schema.PostInput:
    properties:
      content:
        type: string
      user_id:
        type: string
    required:
    - content
    - user_id
    type: object
  schema.PostOutput:
    properties:
      author:
        type: string
      content:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      reaction:
        items:
          $ref: '#/definitions/schema.ReactionOutput'
        type: array
      reply:
        $ref: '#/definitions/schema.PostOutput'
      updatedAt:
        type: string
    type: object
  schema.ReactionOutput:
    properties:
      reaction_id:
        type: integer
      user:
        $ref: '#/definitions/schema.UserOutput'
    type: object
  schema.SignInInput:
    properties:
      id:
        type: string
      password:
        type: string
    required:
    - id
    - password
    type: object
  schema.SignUpInput:
    properties:
      id:
        type: string
      image_url:
        items:
          type: string
        type: array
      name:
        type: string
      password:
        type: string
    required:
    - id
    - image_url
    - password
    type: object
  schema.UserOutput:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
info:
  contact: {}
  license:
    name: Kizuku
  title: Megamouth
  version: "1.0"
paths:
  /post/{id}:
    delete:
      parameters:
      - description: ID
        in: path
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.PostOutput'
        "400":
          description: Bad Request
          schema: {}
      summary: 投稿の削除
      tags:
      - post
    get:
      parameters:
      - description: ID
        in: path
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.PostOutput'
        "400":
          description: Bad Request
          schema: {}
      summary: post_idから投稿を取得
      tags:
      - post
    put:
      parameters:
      - description: postの編集
        in: body
        name: body
        schema:
          $ref: '#/definitions/schema.PostInput'
      - description: ID
        in: path
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.PostOutput'
        "400":
          description: Bad Request
          schema: {}
      summary: 投稿の編集
      tags:
      - post
  /post/all:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema: {}
      summary: 投稿の全件取得
      tags:
      - post
  /post/create:
    post:
      parameters:
      - description: postの新規作成
        in: body
        name: body
        schema:
          $ref: '#/definitions/schema.PostInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.PostOutput'
        "400":
          description: Bad Request
          schema: {}
      summary: 投稿の投稿
      tags:
      - post
  /user/{id}:
    get:
      parameters:
      - description: id
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.UserOutput'
        "400":
          description: Bad Request
          schema: {}
      summary: userIDからUserを返す
      tags:
      - user
  /user/create:
    post:
      parameters:
      - description: userの新規作成
        in: body
        name: body
        schema:
          $ref: '#/definitions/schema.SignUpInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.AuthOutput'
        "400":
          description: Bad Request
          schema: {}
      summary: userの新規作成
      tags:
      - user
  /user/is_used/{id}:
    get:
      parameters:
      - description: id
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.MessageOutput'
        "400":
          description: Bad Request
          schema: {}
      summary: IDが使用済みかどうか(使用済みはtrueが返る)
      tags:
      - user
  /user/login:
    post:
      parameters:
      - description: サインイン
        in: body
        name: body
        schema:
          $ref: '#/definitions/schema.SignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.AuthOutput'
        "400":
          description: Bad Request
          schema: {}
      summary: サインイン
      tags:
      - user
securityDefinitions:
  BearerAuth:
    type: basic
swagger: "2.0"
